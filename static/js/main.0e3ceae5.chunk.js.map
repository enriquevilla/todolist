{"version":3,"sources":["components/TodoItem/TodoItem.js","components/TodoInput/TodoInput.js","components/TodoButton/TodoButton.js","components/App.js","index.js"],"names":["TodoItem","textClass","this","props","item","complete","className","last","type","checked","onChange","handleChange","id","htmlFor","text","React","Component","TodoInput","state","placeholder","disabled","TodoButton","onClick","handleClick","savedState","JSON","parse","window","localStorage","getItem","finalState","App","todos","bind","handleClickClean","handleClickClear","handleKeyDown","setState","prevState","map","i","filter","document","querySelector","blur","querySelectorAll","event","input","key","value","slice","test","addEventListener","newTodo","Math","random","toString","substr","push","innerWidth","setAttribute","removeEventListener","removeAttribute","target","stringify","setItem","mydata","length","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0e3ceae5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./TodoItem.css\";\r\n\r\nclass TodoItem extends React.Component {\r\n    render () {\r\n        let textClass = \"todo-text\";\r\n        textClass += this.props.item.complete ? \" complete\" : \"\";\r\n        return (\r\n            <div className={(this.props.item.last) ? \"last\" : null}>\r\n                <input \r\n                    type=\"checkbox\" \r\n                    checked={this.props.item.complete}\r\n                    onChange={() => this.props.handleChange(this.props.item.id)}\r\n                    id={this.props.item.id}\r\n                />\r\n                <div className=\"text\">\r\n                        <label \r\n                            className={textClass} \r\n                            htmlFor={this.props.item.id}\r\n                        >\r\n                            {this.props.item.text}\r\n                        </label>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoItem;","import React from \"react\";\r\nimport \"./TodoInput.css\";\r\n\r\nclass TodoInput extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input \r\n                type={this.props.type}\r\n                placeholder={this.props.placeholder}\r\n                disabled\r\n            >\r\n            </input>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoInput;","import React from \"react\";\r\nimport \"./TodoButton.css\"\r\n\r\nclass TodoButton extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        return (\r\n            <button \r\n                onClick={() => this.props.handleClick()}\r\n            >\r\n                {this.props.text}\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoButton;\r\n","import React from \"react\";\r\nimport TodoItem from \"./TodoItem/TodoItem\";\r\nimport TodoInput from \"./TodoInput/TodoInput\";\r\nimport TodoButton from \"./TodoButton/TodoButton\";\r\n\r\n// Random ID generator function\r\nlet ID = () => {\r\n    return \"_\" + Math.random().toString(36).substr(2,9);\r\n};\r\n\r\n// Parse saved list to JSON if exists\r\nconst savedState = JSON.parse(window.localStorage.getItem(\"todos\"));\r\nlet finalState = [];\r\nif (savedState != null) {\r\n    finalState = savedState;\r\n}\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            todos: finalState\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClickClean = this.handleClickClean.bind(this);\r\n        this.handleClickClear = this.handleClickClear.bind(this);\r\n        this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    }\r\n\r\n    // Handle checkbox toggling\r\n    handleChange(id) {\r\n        this.setState(prevState => {\r\n            const updatedTodos = prevState.todos.map(i => {\r\n                if (i.id === id) {\r\n                    i.complete = !i.complete;\r\n                }\r\n                return i;\r\n            });\r\n            return {\r\n                todos: updatedTodos\r\n            }\r\n        })\r\n    }\r\n\r\n    // Handle removal of completed items\r\n    handleClickClean() {\r\n        this.setState(prevState => {\r\n            const todosToComplete = prevState.todos.filter(i => {\r\n                return !i.complete;\r\n            })\r\n            return {\r\n                todos: todosToComplete\r\n            }\r\n        });\r\n        document.querySelector(\".button-container > button\").blur();\r\n    }\r\n\r\n    // Handle removal of all items\r\n    handleClickClear() {\r\n        this.setState({\r\n            todos: []\r\n        });\r\n        document.querySelectorAll(\".button-container > button\")[1].blur();\r\n    }\r\n\r\n    // Handle keystrokes on desktop\r\n    handleKeyDown(event) {\r\n        let input = document.querySelector(\".input-container > input\"); \r\n        if (event.key === \"Backspace\") {\r\n            input.value = input.value.slice(0, -1);\r\n        } else if (/^[A-Za-z0-9!?.áéíóúñ]$/.test(event.key) || event.key === \" \"){\r\n            input.value += event.key;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Key event listener and responsive use\r\n        let input = document.querySelector(\".input-container > input\"); \r\n        document.addEventListener(\"keydown\", (event) => {\r\n            if (event.key === \"Enter\") {\r\n                const newTodo = {\r\n                    id: ID(),\r\n                    text: input.value,\r\n                    complete: false\r\n                };\r\n                this.setState(prevState => {\r\n                    prevState.todos.push(newTodo);\r\n                    return {\r\n                        todos: prevState.todos\r\n                    }\r\n                });\r\n                input.value = \"\";\r\n            }\r\n        });\r\n        if (window.innerWidth > 768) {\r\n            document.addEventListener(\"keydown\", this.handleKeyDown);\r\n            document.querySelector(\".input-container > input\").setAttribute(\"disabled\",\"\");\r\n        } else {\r\n            document.removeEventListener(\"keydown\", this.handleKeyDown);\r\n            document.querySelector(\".input-container > input\").removeAttribute(\"disabled\");\r\n        }\r\n        window.addEventListener(\"resize\", (event) => {\r\n            if (event.target.innerWidth > 768) {\r\n                document.addEventListener(\"keydown\", this.handleKeyDown);\r\n                document.querySelector(\".input-container > input\").setAttribute(\"disabled\",\"\");\r\n            } else {\r\n                document.removeEventListener(\"keydown\", this.handleKeyDown);\r\n                document.querySelector(\".input-container > input\").removeAttribute(\"disabled\");\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        // Save state to localStorage when rendering\r\n        const savedState = JSON.stringify(this.state.todos);\r\n        window.localStorage.setItem(\"todos\", savedState);\r\n\r\n        // Assign true to last item on list (CSS) and create components\r\n        let mydata = this.state.todos.map(i => {\r\n            if (i === this.state.todos[this.state.todos.length - 1]) {\r\n                i.last = true;\r\n            } else {\r\n                i.last = false;\r\n            }\r\n            return <TodoItem\r\n                key={i.id}\r\n                item={i}\r\n                handleChange={this.handleChange}\r\n            />\r\n        });\r\n\r\n        // If no components, this text will be displayed\r\n        if (mydata.length === 0) {\r\n            mydata = \r\n                <p className=\"todos-empty\">\r\n                    To do list empty, add some items\r\n                </p>;\r\n        }\r\n\r\n        // Render all components\r\n        return (\r\n            <div>\r\n                <div className=\"todo-container\">\r\n                    {mydata}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <TodoInput \r\n                        type=\"text\" \r\n                        placeholder=\"Add item to list...\"\r\n                    />\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <TodoButton\r\n                        text=\"Clean\"\r\n                        handleClick={this.handleClickClean}\r\n                    />\r\n                    <TodoButton\r\n                        text=\"Clear all\"\r\n                        handleClick={this.handleClickClear}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"./index.css\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}