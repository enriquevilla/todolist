{"version":3,"sources":["components/TodoItem/TodoItem.js","components/TodoInput/TodoInput.js","components/TodoButton/TodoButton.js","components/App.js","index.js"],"names":["TodoItem","textClass","this","props","item","complete","className","last","type","checked","onChange","handleChange","id","text","React","Component","TodoInput","state","placeholder","disabled","TodoButton","onClick","handleClick","savedState","JSON","parse","window","localStorage","getItem","finalState","App","todos","bind","setState","prevState","map","i","filter","document","addEventListener","event","input","querySelector","key","value","slice","newTodo","Math","random","toString","substr","push","test","stringify","setItem","mydata","length","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ec9ffc32.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./TodoItem.css\";\r\n\r\nclass TodoItem extends React.Component {\r\n    render () {\r\n        let textClass = \"todo-text\";\r\n        textClass += this.props.item.complete ? \" complete\" : \"\";\r\n        return (\r\n            <div className={(this.props.item.last) ? \"last\" : null}>\r\n                <input \r\n                    type=\"checkbox\" \r\n                    checked={this.props.item.complete}\r\n                    onChange={() => this.props.handleChange(this.props.item.id)}\r\n                />\r\n                <div className=\"text\">\r\n                    <span className={textClass}>\r\n                        {this.props.item.text}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoItem;","import React from \"react\";\r\nimport \"./TodoInput.css\";\r\n\r\nclass TodoInput extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <input \r\n                type={this.props.type}\r\n                placeholder={this.props.placeholder}\r\n                disabled\r\n            >\r\n            </input>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoInput;","import React from \"react\";\r\n\r\nclass TodoButton extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        return (\r\n            <button onClick={() => this.props.handleClick()}>\r\n                Remove completed items\r\n            </button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoButton;\r\n","import React from \"react\";\r\nimport TodoItem from \"./TodoItem/TodoItem\";\r\nimport TodoInput from \"./TodoInput/TodoInput\";\r\nimport TodoButton from \"./TodoButton/TodoButton\";\r\n\r\n// Random ID generator function\r\nlet ID = () => {\r\n    return \"_\" + Math.random().toString(36).substr(2,9);\r\n};\r\n\r\n// Parse saved list to JSON if exists\r\nconst savedState = JSON.parse(window.localStorage.getItem(\"todos\"));\r\nlet finalState = [];\r\nif (savedState != null) {\r\n    finalState = savedState;\r\n}\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            todos: finalState\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    // Handle checkbox toggling\r\n    handleChange(id) {\r\n        this.setState(prevState => {\r\n            const updatedTodos = prevState.todos.map(i => {\r\n                if (i.id === id) {\r\n                    i.complete = !i.complete;\r\n                }\r\n                return i;\r\n            });\r\n            return {\r\n                todos: updatedTodos\r\n            }\r\n        })\r\n    }\r\n\r\n    // Handle removal of completed items\r\n    handleClick() {\r\n        this.setState(prevState => {\r\n            const todosToComplete = prevState.todos.filter(i => {\r\n                return !i.complete;\r\n            })\r\n            return {\r\n                todos: todosToComplete\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Key event listener\r\n        document.addEventListener(\"keydown\", (event) => {\r\n            let input = document.querySelector(\".input-container > input\"); \r\n            if (event.key === \"Backspace\") {\r\n                input.value = input.value.slice(0, -1);\r\n            } else if (event.key === \"Enter\"){\r\n                const newTodo = {\r\n                    id: ID(),\r\n                    text: input.value,\r\n                    complete: false\r\n                };\r\n                this.setState(prevState => {\r\n                    prevState.todos.push(newTodo);\r\n                    return {\r\n                        todos: prevState.todos\r\n                    }\r\n                });\r\n                input.value = \"\";\r\n            } else if (/^[A-Za-z0-9!?.áéíóúñ]$/.test(event.key) || event.key === \" \"){\r\n                input.value += event.key;\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        // Save state to localStorage when rendering\r\n        const savedState = JSON.stringify(this.state.todos);\r\n        window.localStorage.setItem(\"todos\", savedState);\r\n\r\n        // Assign true to last item on list (CSS) and create components\r\n        let mydata = this.state.todos.map(i => {\r\n            if (i === this.state.todos[this.state.todos.length - 1]) {\r\n                i.last = true;\r\n            } else {\r\n                i.last = false;\r\n            }\r\n            return <TodoItem\r\n                key={i.id}\r\n                item={i}\r\n                handleChange={this.handleChange}\r\n            />\r\n        });\r\n\r\n        // If no components, this text will be displayed\r\n        if (mydata.length === 0) {\r\n            mydata = \r\n                <p className=\"todos-empty\">\r\n                    To do list empty, add some items\r\n                </p>;\r\n        }\r\n\r\n        // Render all components\r\n        return (\r\n            <div>\r\n                <div className=\"todo-container\">\r\n                    {mydata}\r\n                </div>\r\n                <div className=\"input-container\">\r\n                    <TodoInput \r\n                        type=\"text\" \r\n                        placeholder=\"Add item to list...\"\r\n                    />\r\n                </div>\r\n                <div className=\"button-container\">\r\n                    <TodoButton \r\n                        handleClick={this.handleClick}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport \"./index.css\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}